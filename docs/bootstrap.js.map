{"version":3,"sources":["webpack:///./src/taskpane/components/App.tsx","webpack:///./src/taskpane/components/HeroList.tsx","webpack:///./src/README.md","webpack:///./src/core/debug.ts","webpack:///./src/taskpane/bootstrap.tsx","webpack:///./src/core/styler.ts","webpack:///./src/core/utils.ts"],"names":["MessageRecord","Object","immutable__WEBPACK_IMPORTED_MODULE_0__","id","content","type","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_2__","info","display","isDismissable","ProfileRecord","showGetStarted","showMessages","SettingsRecord","enableStyler","inlineStyle","enablePrettier","proseWrap","ButtonStyle","width","ElementContainer","_super","__extends","prototype","render","react__WEBPACK_IMPORTED_MODULE_1__","className","style","justifyContent","padding","this","props","children","CongratsText","App","context","_this","call","clickDevButton","__awaiter","Word","run","document","properties","load","sync","_a","sent","body","insertText","InsertLocation","replace","font","color","insertReadme","FilteredReadme","raw_loader_README_md__WEBPACK_IMPORTED_MODULE_12__","start","paragraphs","CongratsParagraph","items","insertParagraph","after","bold","error","console","setupTheme","window","open","remarkSelection","_core_styler__WEBPACK_IMPORTED_MODULE_11__","ProcessSelection","remarkDocument","ProcessDocument","saveSettings","settings","state","toJS","profile","Office","set","saveAsync","result","resetSettings","setState","dismissGetStarted","insert","dismissMessage","messageId","get","mergeSettings","partialSettings","merge","messages","componentDidMount","refreshAsync","warning","success","_HeroList__WEBPACK_IMPORTED_MODULE_10__","message","dir","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_3__","map","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_4__","key","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_5__","messageBarType","onDismiss","undefined","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_6__","_core_debug__WEBPACK_IMPORTED_MODULE_13__","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_7__","iconProps","iconName","onClick","ref","span","GetStartedSpan","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_8__","target","primaryButtonProps","secondaryButtonProps","headline","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_9__","checked","label","inlineLabel","onChange","_","HeroList","listItems","item","index","react__WEBPACK_IMPORTED_MODULE_0__","icon","primaryText","__webpack_exports__","DEBUG","office_ui_fabric_react_lib_Icons__WEBPACK_IMPORTED_MODULE_1__","Bootstrap","Component","app","__assign","_uifabric_fluent_theme__WEBPACK_IMPORTED_MODULE_3__","defaultProps","_components_App__WEBPACK_IMPORTED_MODULE_4__","DEFAULT_SETTINGS","getCleanText","str","getPointParagraph","range","point","line","getPointCursur","options","pointParagraph","charRanges","split","isEnd","column","getNodeRange","node","position","startParagraph","_b","startCharRanges","startCursor","end","endCursor","expandTo","getRange","RangeLocation","UnistDFS","visitor","extendedNode","length","RemarkWord","Compiler","tree","nodeRange","titleParagraph","search","getFirst","styleBuiltIn","Style","title","name","size","nodeHeading","WordHeadingStyles","heading1","heading2","heading3","heading4","heading5","heading6","heading7","heading8","heading9","depth","quote","strong","strikeThrough","nodeLink","hyperlink","url","nodeDefinition","ProcessStyler","remarkText","text","Promise","resolve","reject","unified__WEBPACK_IMPORTED_MODULE_0___default","use","remark_parse__WEBPACK_IMPORTED_MODULE_2___default","a","remark_frontmatter__WEBPACK_IMPORTED_MODULE_1___default","process","ProcessPrettier","_g","originalText","_utils__WEBPACK_IMPORTED_MODULE_7__","apply","_c","concat","prettyText","prettier_standalone__WEBPACK_IMPORTED_MODULE_3___default","format","parser","plugins","prettier_parser_markdown__WEBPACK_IMPORTED_MODULE_4___default","prettier_parser_yaml__WEBPACK_IMPORTED_MODULE_5___default","prettier_parser_babylon__WEBPACK_IMPORTED_MODULE_6___default","_e","_d","_f","fixedText","startsWith","endsWith","slice","match","repeat","ProcessRange","status","AsyncResultStatus","Succeeded","normal","remarkRange_1","getSelection","getLast","inputRange","trackedObjects","add","error_1","remarkRange_2","error_2","hex","__generator","ch","charCodeAt"],"mappings":"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","file":"bootstrap.js","sourcesContent":["import { Record, List, Map } from \"immutable\"\nimport * as React from \"react\"\nimport * as Fabric from \"office-ui-fabric-react\"\nimport HeroList from \"./HeroList\"\nimport Styler from \"../../core/styler\"\nimport ReadmeMarkdown from \"raw-loader!../../README.md\"\nimport DEBUG from \"../../core/debug\"\n\n// Types\n\nexport interface AppPropsType {\n  title: string\n}\ninterface MessageType {\n  id: string\n  content: any\n  type: Fabric.MessageBarType\n  display: boolean\n  isDismissable: boolean\n}\nconst MessageRecord = Record<MessageType>({\n  id: \"\",\n  content: \"\",\n  type: Fabric.MessageBarType.info,\n  display: true,\n  isDismissable: true,\n})\ninterface ProfileType {\n  showGetStarted: boolean\n  showMessages: Map<string, boolean>\n}\nconst ProfileRecord = Record<ProfileType>({\n  showGetStarted: true,\n  showMessages: Map<string, boolean>(),\n})\ninterface SettingsType {\n  enableStyler: boolean\n  inlineStyle: boolean\n  enablePrettier: boolean\n  proseWrap: boolean\n}\nconst SettingsRecord = Record<SettingsType>({\n  enableStyler: true,\n  inlineStyle: true,\n  enablePrettier: true,\n  proseWrap: false,\n})\nexport interface AppStateType {\n  settings: Record<SettingsType>\n  profile: Record<ProfileType>\n  messages: List<Record<MessageType>>\n}\n\n// Styles\n\nconst ButtonStyle: React.CSSProperties = {\n  width: \"100%\",\n}\nclass ElementContainer extends React.Component {\n  render() {\n    return (\n      <div\n        className=\"ms-Grid-col ms-sm12 ms-md6 ms-lg3\"\n        style={{\n          justifyContent: \"center\",\n          display: \"flex\",\n          padding: \"5px 5px 0 0\",\n        }}\n      >\n        <div style={{ width: \"200px\" }}>{this.props.children}</div>\n      </div>\n    )\n  }\n}\n\n// Data\n\nconst CongratsText = `<!-- Congratulations! Your team's life becomes much easier! Now, click on \"Remark Document\" to continue reading. -->`\n\n// Component\n\nexport default class App extends React.Component<AppPropsType, AppStateType> {\n  GetStartedSpan: HTMLSpanElement\n\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      settings: SettingsRecord(),\n      profile: ProfileRecord(),\n      messages: List<Record<MessageType>>(),\n    }\n    console.info(\"Initial props: \", this.props, \"Initial state: \", this.state)\n  }\n\n  componentDidMount() {\n    Office.context.document.settings.refreshAsync(result => {\n      try {\n        console.debug(\"Loaded addin settings: \", result)\n        const settings = Office.context.document.settings.get(\"settings\")\n        const profile = Office.context.document.settings.get(\"profile\")\n        console.info(\"Loaded Settings: \", settings, \"Profile: \", profile)\n        profile.showMessages = Map(profile.showMessages)\n        this.setState(\n          {\n            settings: SettingsRecord(settings),\n            profile: ProfileRecord(profile),\n          },\n          () => {\n            console.debug(\"Loaded state: \", this.state)\n          }\n        )\n      } catch (error) {\n        console.error(error)\n      }\n    })\n\n    this.setState(() => {\n      return {\n        messages: List<Record<MessageType>>([\n          MessageRecord({\n            id: \"VersionHistory\",\n            content:\n              'Use OneDrive \"Version History\" to get your work back in case anything is missing',\n            type: Fabric.MessageBarType.error,\n            display: true,\n            isDismissable: true,\n          }),\n          MessageRecord({\n            id: \"DesktopSupport\",\n            content:\n              \"Known issue: Word Desktop is not supported for now as it's using IE as internal javascript engine\",\n            type: Fabric.MessageBarType.warning,\n            display: true,\n            isDismissable: true,\n          }),\n          MessageRecord({\n            id: \"Whitespace\",\n            content:\n              \"Known issue: Due to MS Word implementation, the space (ascii:32) might be replaced by a nb-space (nbsp, ascii:160) by accident. Use caution when you copy your content into clipboard\",\n            type: Fabric.MessageBarType.warning,\n            display: true,\n            isDismissable: true,\n          }),\n          MessageRecord({\n            id: \"DocumentSettings\",\n            content: \"Add-in settings are stored per documend\",\n            type: Fabric.MessageBarType.info,\n            display: true,\n            isDismissable: true,\n          }),\n          MessageRecord({\n            id: \"FindReadme\",\n            content: \"Above messages can be found in Readme\",\n            type: Fabric.MessageBarType.success,\n            display: true,\n            isDismissable: true,\n          }),\n        ]),\n      }\n    })\n  }\n\n  clickDevButton = async () => {\n    const devMarkdown = `\nIt's a **strong** word\n`\n    return Word.run(async context => {\n      // console.debug(\"custom Xml: \",context.document.customXmlParts)\n      context.document.properties.load()\n      await context.sync()\n      console.debug(\"properties: \", context.document.properties)\n      // context.document.set({template:\"\"})\n      const paragraph = context.document.body.insertText(\n        devMarkdown,\n        Word.InsertLocation.replace\n      )\n      paragraph.font.color = \"blue\"\n      await context.sync()\n    })\n  }\n\n  insertReadme = async () => {\n    console.debug(\"Inserting readme...\")\n    let FilteredReadme = ReadmeMarkdown\n    FilteredReadme = FilteredReadme.replace(\n      /INSTALL SECTION BEGIN(.|\\n)*INSTALL SECTION END/gm,\n      \"\"\n    )\n    FilteredReadme = FilteredReadme.replace(/<!--.*-->\\n/g, \"\")\n    try {\n      return Word.run(async context => {\n        context.document.body.insertText(\n          FilteredReadme,\n          Word.InsertLocation.start\n        )\n        await context.sync()\n        context.document.body.paragraphs.load()\n        await context.sync()\n        const CongratsParagraph = context.document.body.paragraphs.items[5].insertParagraph(\n          CongratsText,\n          Word.InsertLocation.after\n        )\n        CongratsParagraph.font.color = \"red\"\n        CongratsParagraph.font.bold = true\n        await context.sync()\n      })\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  setupTheme = async () => {\n    console.debug(\"Setting up document theme...\")\n    window.open(\n      \"https://github.com/poifuture/markdown-styler-for-word#theme\",\n      \"_blank\"\n    )\n    console.error(\"Not Implemented\")\n  }\n\n  remarkSelection = async () => {\n    console.debug(\"Remarking selection...\")\n    await Styler.ProcessSelection()\n  }\n\n  remarkDocument = async () => {\n    console.debug(\"Remarking entire document...\")\n    await Styler.ProcessDocument()\n  }\n\n  saveSettings = () => {\n    console.debug(\"Saving settings...\")\n    const settings = this.state.settings.toJS()\n    const profile = this.state.profile.toJS()\n    console.debug(\"Settings: \", settings, \"Profile: \", profile)\n    Office.context.document.settings.set(\"settings\", settings)\n    Office.context.document.settings.set(\"profile\", profile)\n    Office.context.document.settings.saveAsync(result => {\n      console.info(\"Settings saved: \", result)\n    })\n  }\n\n  resetSettings = () => {\n    console.debug(\"Reseting settings...\")\n    this.setState(\n      {\n        settings: SettingsRecord(),\n        profile: ProfileRecord(),\n      },\n      this.saveSettings\n    )\n  }\n\n  dismissGetStarted = async (insert?: boolean) => {\n    console.debug(\"Dismissing GetStarted ...\")\n    this.setState(\n      state => ({\n        profile: state.profile.set(\"showGetStarted\", false),\n      }),\n      this.saveSettings\n    )\n    if (insert) {\n      await this.insertReadme()\n    }\n  }\n\n  dismissMessage = async messageId => {\n    console.debug(\"Dismissing message: \", messageId)\n    this.setState(\n      state => ({\n        profile: state.profile.set(\n          \"showMessages\",\n          state.profile.get(\"showMessages\").set(messageId, false)\n        ),\n      }),\n      this.saveSettings\n    )\n  }\n\n  mergeSettings = async (partialSettings: Partial<SettingsType>) => {\n    console.info(\"Merging settings: \", partialSettings)\n    this.setState(\n      { settings: this.state.settings.merge(partialSettings) },\n      this.saveSettings\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"ms-welcome\">\n        <HeroList\n          message=\"Make Word a markdown friendly collaborative editor\"\n          items={[]}\n        ></HeroList>\n        <main className=\"ms-Grid\" dir=\"ltr\">\n          <Fabric.Stack>\n            {this.state.messages.map(\n              message =>\n                this.state.profile.get(\"showMessages\").get(message.get(\"id\")) !=\n                  false && (\n                  <Fabric.StackItem key={message.get(\"id\")}>\n                    <Fabric.MessageBar\n                      messageBarType={message.get(\"type\")}\n                      onDismiss={\n                        message.get(\"isDismissable\")\n                          ? () => this.dismissMessage(message.get(\"id\"))\n                          : undefined\n                      }\n                    >\n                      {message.get(\"content\")}\n                    </Fabric.MessageBar>\n                  </Fabric.StackItem>\n                )\n            )}\n          </Fabric.Stack>\n          <Fabric.Separator># Home</Fabric.Separator>\n          <div className=\"ms-Grid-row\">\n            {DEBUG && (\n              <ElementContainer>\n                <Fabric.DefaultButton\n                  style={ButtonStyle}\n                  iconProps={{ iconName: \"ChevronRight\" }}\n                  onClick={this.clickDevButton}\n                >\n                  Dev Button\n                </Fabric.DefaultButton>\n              </ElementContainer>\n            )}\n            <ElementContainer>\n              <span ref={span => (this.GetStartedSpan = span)}>\n                <Fabric.DefaultButton\n                  style={ButtonStyle}\n                  iconProps={{ iconName: \"MarkDownLanguage\" }}\n                  onClick={this.insertReadme}\n                >\n                  Insert Readme.md\n                </Fabric.DefaultButton>\n              </span>\n              {this.state.profile.get(\"showGetStarted\") && (\n                <Fabric.TeachingBubble\n                  target={this.GetStartedSpan}\n                  primaryButtonProps={{\n                    children: \"Go ahead\",\n                    onClick: () => this.dismissGetStarted(true),\n                  }}\n                  secondaryButtonProps={{\n                    children: \"Later\",\n                    onClick: () => this.dismissGetStarted(),\n                  }}\n                  headline=\"Get Started\"\n                  onDismiss={() => this.dismissGetStarted()}\n                >\n                  Insert Readme.md to the top of your document\n                </Fabric.TeachingBubble>\n              )}\n            </ElementContainer>\n            <ElementContainer>\n              <Fabric.DefaultButton\n                style={ButtonStyle}\n                iconProps={{ iconName: \"Color\" }}\n                onClick={this.setupTheme}\n              >\n                Setup Theme\n              </Fabric.DefaultButton>\n            </ElementContainer>\n            <ElementContainer>\n              <Fabric.DefaultButton\n                style={ButtonStyle}\n                iconProps={{ iconName: \"ChevronDown\" }}\n                onClick={this.remarkSelection}\n              >\n                Remark Selection\n              </Fabric.DefaultButton>\n            </ElementContainer>\n            <ElementContainer>\n              <Fabric.DefaultButton\n                style={ButtonStyle}\n                iconProps={{ iconName: \"ChevronDownEnd6\" }}\n                onClick={this.remarkDocument}\n              >\n                Remark Document\n              </Fabric.DefaultButton>\n            </ElementContainer>\n          </div>\n          <Fabric.Separator># Settings</Fabric.Separator>\n          <div className=\"ms-Grid-row\">\n            <ElementContainer>\n              <Fabric.Toggle\n                checked={this.state.settings.get(\"enableStyler\")}\n                label=\"Enable Styler\"\n                inlineLabel={true}\n                onChange={(_, checked) => {\n                  this.mergeSettings({ enableStyler: checked })\n                }}\n              />\n            </ElementContainer>\n            <ElementContainer>\n              <Fabric.Toggle\n                checked={this.state.settings.get(\"inlineStyle\")}\n                label=\"Styler: Inline Style\"\n                inlineLabel={true}\n                onChange={(_, checked) => {\n                  this.mergeSettings({ inlineStyle: checked })\n                }}\n              />\n            </ElementContainer>\n            <ElementContainer>\n              <Fabric.Toggle\n                checked={this.state.settings.get(\"enablePrettier\")}\n                label=\"Enable Prettier\"\n                inlineLabel={true}\n                onChange={(_, checked) => {\n                  this.mergeSettings({ enablePrettier: checked })\n                }}\n              />\n            </ElementContainer>\n            <ElementContainer>\n              <Fabric.Toggle\n                checked={this.state.settings.get(\"proseWrap\")}\n                label=\"Prettier: Prose Wrap\"\n                inlineLabel={true}\n                onChange={(_, checked) => {\n                  this.mergeSettings({ proseWrap: checked })\n                }}\n              />\n            </ElementContainer>\n            <ElementContainer>\n              <Fabric.DefaultButton\n                style={ButtonStyle}\n                iconProps={{ iconName: \"ChevronDownEnd6\" }}\n                onClick={this.resetSettings}\n              >\n                Reset Settings\n              </Fabric.DefaultButton>\n            </ElementContainer>\n          </div>\n        </main>\n      </div>\n    )\n  }\n}\n","import * as React from \"react\"\n\nexport interface HeroListItem {\n  icon: string\n  primaryText: string\n}\n\nexport interface HeroListProps {\n  message: string\n  items: HeroListItem[]\n}\n\nexport default class HeroList extends React.Component<HeroListProps> {\n  render() {\n    const { children, items, message } = this.props\n\n    const listItems = items.map((item, index) => (\n      <li className=\"ms-ListItem\" key={index}>\n        <i className={`ms-Icon ms-Icon--${item.icon}`} />\n        <span className=\"ms-font-m ms-fontColor-neutralPrimary\">\n          {item.primaryText}\n        </span>\n      </li>\n    ))\n    return (\n      <header className=\"ms-welcome__main\">\n        <h2 className=\"ms-font-xl ms-fontWeight-semilight ms-fontColor-neutralPrimary ms-u-slideUpIn20\">\n          {message}\n        </h2>\n        <ul className=\"ms-List ms-welcome__features ms-u-slideUpIn10\">\n          {listItems}\n        </ul>\n        {children}\n      </header>\n    )\n  }\n}\n","export default \"---\\ntitle: Markdown Styler for MS Word\\nauthor: poifuture\\nhomepage: https://github.com/poifuture/markdown-styler-for-word\\n---\\n\\n<!-- prettier-ignore-start -->\\n<!-- markdownlint-disable -->\\n<!-- DO NOT FORMAT. This file is used to teach people how to use prettier in MS Word, so we keep exactly whatever it looks. -->\\n\\n# Markdown Styler for MS Word\\n\\n> Make MS Word a markdown friendly collaborative editor.\\n\\nWelcome to markdown world!\\nThis MS Word add-in aims to apply styles to your markdown document without changing your content.\\nYou can easily view your document with a better look while real-time collaborating with others.\\nOur team is actively using it for writing our meeting notes.\\n\\n<!-- INSTALL SECTION BEGIN  -->\\n\\n## Install\\n\\nOpen MS Word Online -> Insert\\\" -> \\\"Office Add-ins\\\" -> \\\"Store -> Search \\\"Markdown Styler\\\" -> Add\\n\\nIf the add-in is successfully installed, the add-in will appear in the \\\"Home\\\" tab with a \\\"Remark Selection\\\" button.\\n\\n<!-- INSTALL SECTION END -->\\n\\n## Usage\\n\\n1. Carefully read the Readme and Warning before using it (You can find Readme at Home Tab -> Markdown Styler Menu -> Insert Readme)\\n1. (Optional) (Not Implemented) Setup the document theme for a better style (e.g. monospace font)\\n1. Click \\\"Remark Document\\\" (it will style the whole document)\\n1. (Optional) Customize the built-in styles (Normal, Heading1, etc.) of the document theme in MS Word\\n\\n## Warning\\n\\nThere might be unexpected changes happen. If any content is missing, try the \\\"History\\\" feature of MS Word. (Open folder in OneDrive Online -> Right click the file -> Version history)\\n\\n## Why MS Word Online\\n\\n* Good integration with MS products family and **Office Enterprise accounts**\\n* Acceptable by traditional companies\\n* Real-time collaborative editing (buggy but usable)\\n* Version history (extremely buggy comparing to ...)\\n* China friendly\\n* Free! (For personal use) (For our team: We paid Office 365!)\\n* ~~Rich functionality~~ Rich bugs\\n\\n## What \\\"Remark Document\\\" & \\\"Remark Selection\\\" does\\n\\n1. Clear all existing styles\\n1. Format your document with [Prettier](https://github.com/prettier/prettier)\\n    1. Prettier will format your markdown\\n    1. Prettier will format your front matter\\n    1. [Not Implemented] Prettier will format your code block\\n1. Parse your markdown styles with [Remark](https://github.com/remarkjs/remark)\\n1. [Not Implemented] ~~Apply syntax highlights to your code block with [Highlight.js](https://github.com/highlightjs/highlight.js/)~~\\n1. [Not Implemented] ~~Watch live changes and apply style after typing Enter~~\\n\\n## What \\\"Setup Theme\\\" does {#theme}\\n\\n**Nothing**\\n\\nDue to the limitation of Word, it's not possible to modify the template through the add-in. You'll have to manually apply a markdown friendly template by the following steps.\\n\\n1. Open your document in Desktop Word (Edit in Word)\\n1. In Desktop Work, search for \\\"templates\\\" and click \\\"Add-ins\\\" action\\n1. In \\\"Templates and Add-ins\\\" window, Attach `https://poifuture.github.io/markdown-styler-for-word/Markdown.dotx`. (Note: you can download and modify the template to fit your needs)\\n1. Check \\\"Automatically update document styles\\\" and click \\\"OK\\\"\\n\\n* [Not Implemented] ~~Change the theme of your document~~\\n  - ~~Font: Courier New (A monospace font)~~\\n  - ~~Size: 10 (To make each line contains >=80 chars)~~\\n\\n## Examples\\n\\n### Long Paragraph\\n\\nA long paragraph will be rewrapped at column 80 if the `prettier.proseWrap` is configured as `always`.\\nIf there is no empty line, the two lines will be merged in markdown.\\nSo please always remember to insert an empty line between your paragraphs.\\n\\n### Headings\\n\\n### A **Strong** Title\\n\\nThere is a **strong** word and **some phrases** in a sentence.\\n\\n### List\\n\\n### Table\\n\\nColumn 1 | Column 2 has a long head | c3 | c4\\n--- | --- | --- | ---\\nc1 | c2 | Column 3 is long | c4\\n\\n### Code\\n\\n```javascript\\n  const a=1\\n```\\n\\n## Known Issues\\n\\n### Inline Style\\n\\nThe inline style doesn't work at all in both Word Online and Word Desktop because of different Microsoft issues. In Word Online (Chrome), the inline style will sometimes apply to the entire paragraph after the targeted range. See [bug](https://github.com/OfficeDev/office-js/issues/586). In on-premise Word (Word Desktop), the javascript engine is IE, which lacks the functionality of choosing the exact range.\\n\\n### Whitespaces\\n\\nAs every web UI developer knows, a normal space (0x20, ascii 32) is different from a display space (0xA0, ascii 160, also known as nbsp, non-breaking space, hard space, etc.). As a workaround, this Add-in will replace all nbsp to space before processing, and put nbsp back in the document. It works fine for most cases. However, in rare scenarios, you may accidentally get nbsp in your document. So... be careful.\\n\\n### MS Word doesn't have a vim plugin\\n\\nSo sad...\\n\\n## FAQ\\n\\n> When will \\\"not implemented\\\" become \\\"implemented\\\"?\\n\\nWhen we get 100 [github stars](https://github.com/poifuture/word-add-in-markdown-style)\\n\\n> When will Google doc come true?\\n\\nIf we get can an average rating over 4/5.\\n\\n> Alternatives?\\n\\nTry [SlackEdit](https://stackedit.io/) if you prefer an independent app!\\n\\n## Appreciation\\n\\nThis tool can't be real without the awesome work of [Remark](https://github.com/remarkjs/remark), [Prettier][Prettier] and [MSOffice][MSOffice]\\n\\n## Contributing?\\n\\nWarm Welcome!\\n\\n[MSOffice]: https://github.com/OfficeDev/office-js\\n[Prettier]: https://github.com/prettier/prettier\\n\\n<!-- prettier-ignore-end -->\\n\"","// A wrapper to declare global var\ndeclare var DEBUG: boolean\nexport default typeof DEBUG === \"boolean\" ? DEBUG : true\n","import * as React from \"react\"\nimport \"office-ui-fabric-react/dist/css/fabric.min.css\"\nimport { initializeIcons } from \"office-ui-fabric-react/lib/Icons\"\nimport { Customizer } from \"office-ui-fabric-react\"\nimport { FluentCustomizations } from \"@uifabric/fluent-theme\"\nimport App, { AppPropsType } from \"./components/App\"\n\ninitializeIcons()\n\nexport interface BootstrapPropsType extends AppPropsType {\n  app: typeof App\n}\n\nexport class Bootstrap extends React.Component<BootstrapPropsType> {\n  static defaultProps = {\n    app: App,\n  }\n  render() {\n    const Component = this.props.app\n    return (\n      <Customizer {...FluentCustomizations}>\n        <Component {...this.props} />\n      </Customizer>\n    )\n  }\n}\n","import Unified, * as UnifiedModule from \"unified\"\nimport * as Unist from \"unist\"\nimport RemarkFrontmatter from \"remark-frontmatter\"\nimport RemarkParse from \"remark-parse\"\nimport Prettier from \"prettier/standalone\"\nimport PrettierMarkdown from \"prettier/parser-markdown\"\nimport PrettierYaml from \"prettier/parser-yaml\"\nimport PrettierBabylon from \"prettier/parser-babylon\"\nimport { hex } from \"./utils\"\n\nconst DEFAULT_SETTINGS = {\n  enableStyler: true,\n  inlineStyle: true,\n  enablePrettier: true,\n  proseWrap: false,\n}\n\nconst getCleanText = (str: string): string =>\n  str\n    .replace(/(?:\\r\\n|\\r|\\n)/g, \"\\n\") // crlf\n    .replace(/\\xA0/g, \" \") // &nbsp;\n\nconst getDisplayText = (str: string): string =>\n  str.replace(/[ ]{2,}/g, (match: String) => \"\\xA0\".repeat(match.length)) // &nbsp;\n\nconst loadSettings = async () => {\n  console.debug(\"Loading addin settings...\")\n  const loadSettingsPromise = new Promise((resolve, reject) => {\n    Office.context.document.settings.refreshAsync(result => {\n      console.debug(\"Loaded addin settings result: \", result)\n      if (result.status !== Office.AsyncResultStatus.Succeeded) {\n        reject(result.error)\n      }\n      resolve()\n    })\n  })\n  await loadSettingsPromise\n  const settings = Office.context.document.settings.get(\"settings\")\n  const profile = Office.context.document.settings.get(\"profile\")\n  console.info(\"Loaded Settings: \", settings, \"Profile: \", profile)\n  if (!settings) {\n    // Frist time startup\n    Office.context.document.settings.set(\"settings\", DEFAULT_SETTINGS)\n    return DEFAULT_SETTINGS\n  }\n  return settings\n}\n\nconst getPointParagraph = async (\n  range: Word.Range,\n  point: Unist.Point\n): Promise<Word.Paragraph> => {\n  console.debug(\"Geting point paragraph... \", point)\n  range.paragraphs.load(\"items\")\n  await range.paragraphs.context.sync()\n  return range.paragraphs.items[point.line - 1]\n}\n\nconst getPointCursur = async (\n  range: Word.Range,\n  point: Unist.Point,\n  options: { isEnd: boolean }\n): Promise<Word.Range> => {\n  console.debug(\"Getting point cursor... \", point)\n  const pointParagraph = await getPointParagraph(range, point)\n  const charRanges = pointParagraph.split([\"\"])\n  charRanges.load(\"items\")\n  await charRanges.context.sync()\n  const pointCursor = options.isEnd\n    ? charRanges.items[point.column - 2]\n    : charRanges.items[point.column - 1]\n  return pointCursor\n}\n\nconst getNodeRange = async (\n  range: Word.Range,\n  node: Unist.Node\n): Promise<Word.Range> => {\n  const startParagraph = await getPointParagraph(range, node.position.start)\n  const startCharRanges = startParagraph.split([\"\"])\n  startCharRanges.load(\"items\")\n  await startCharRanges.context.sync()\n  const startCursor = startCharRanges.items[node.position.start.column - 1]\n  const endCursor =\n    node.position.start.line == node.position.end.line\n      ? startCharRanges.items[node.position.end.column - 2]\n      : await getPointCursur(range, node.position.end, { isEnd: true })\n  const nodeRange = startCursor.expandTo(\n    endCursor.getRange(Word.RangeLocation.after)\n  )\n  return nodeRange\n}\n\nconst expandToParagraph = (range: Word.Range): Word.Range => {\n  const startCursor = range.paragraphs\n    .getFirst()\n    .getRange(Word.RangeLocation.start)\n  const endCursor = range.paragraphs.getLast().getRange(Word.RangeLocation.end)\n  return range.expandTo(startCursor).expandTo(endCursor)\n}\n\ninterface UnistParentNode extends Unist.Node {\n  children?: Unist.Node[]\n}\ntype VisitorFunction = (node: Unist.Node) => Promise<void>\nconst UnistDFS = async (node: Unist.Node, visitor: VisitorFunction) => {\n  await visitor(node)\n  const extendedNode = node as UnistParentNode\n  if (extendedNode.children) {\n    for (let index = 0; index < extendedNode.children.length; index++) {\n      await UnistDFS(extendedNode.children[index], visitor)\n    }\n  }\n}\n\nconst RemarkWord: UnifiedModule.Attacher = function(options: {\n  // Cant use arrow function here because the context of 'this' will be different\n  range: Word.Range\n  inlineStyle?: boolean\n}) {\n  const range = options.range\n  const inlineStyle = options.inlineStyle ? true : false // strip undefined\n  const RemarkWordTransformer: UnifiedModule.Transformer = async (\n    tree,\n    _\n  ): Promise<Unist.Node> => {\n    console.debug(\"Tree: \", tree)\n    range.paragraphs.load()\n    await range.context.sync()\n    // Note: Don't try to apply styles in a parallel way. Will face unpredictable behavior!\n    await UnistDFS(tree, async (node: Unist.Node) => {\n      console.debug(\"Node: \", node)\n      switch (node.type) {\n        case \"yaml\": {\n          const nodeRange = await getNodeRange(range, node)\n          nodeRange.font.color = \"darkblue\"\n          await nodeRange.context.sync()\n          const titleParagraph = nodeRange\n            .search(\"title:\")\n            .getFirst()\n            .paragraphs.getFirst()\n          titleParagraph.styleBuiltIn = Word.Style.title\n          await titleParagraph.context.sync()\n          break\n        }\n        case \"table\": {\n          const nodeRange = await getNodeRange(range, node)\n          nodeRange.font.name = \"Courier New\"\n          nodeRange.font.size = 10\n          break\n        }\n        case \"heading\": {\n          const nodeHeading: any = node\n          const WordHeadingStyles = [\n            Word.Style.title,\n            Word.Style.heading1,\n            Word.Style.heading2,\n            Word.Style.heading3,\n            Word.Style.heading4,\n            Word.Style.heading5,\n            Word.Style.heading6,\n            Word.Style.heading7,\n            Word.Style.heading8,\n            Word.Style.heading9,\n          ]\n          const nodeParagraph = await getPointParagraph(\n            range,\n            node.position.start\n          )\n          nodeParagraph.styleBuiltIn = WordHeadingStyles[nodeHeading.depth]\n          break\n        }\n        case \"blockquote\": {\n          const nodeParagraph = await getPointParagraph(\n            range,\n            node.position.start\n          )\n          nodeParagraph.styleBuiltIn = Word.Style.quote\n          break\n        }\n        case \"strong\": {\n          if (!inlineStyle) {\n            break\n          }\n          const nodeRange = await getNodeRange(range, node)\n          nodeRange.styleBuiltIn = Word.Style.strong\n          nodeRange.font.color = \"darkblue\"\n          break\n        }\n        case \"delete\": {\n          if (!inlineStyle) {\n            break\n          }\n          const nodeRange = await getNodeRange(range, node)\n          nodeRange.font.strikeThrough = true\n          break\n        }\n        case \"inlineCode\": {\n          if (!inlineStyle) {\n            break\n          }\n          const nodeRange = await getNodeRange(range, node)\n          nodeRange.font.color = \"darkred\"\n          break\n        }\n        case \"link\": {\n          if (!inlineStyle) {\n            break\n          }\n          const nodeLink: any = node\n          const nodeRange = await getNodeRange(range, node)\n          nodeRange.hyperlink = nodeLink.url\n          break\n        }\n        case \"definition\": {\n          if (!inlineStyle) {\n            break\n          }\n          const nodeDefinition: any = node\n          const nodeRange = await getNodeRange(range, node)\n          nodeRange.hyperlink = nodeDefinition.url\n          break\n        }\n      }\n    })\n    return tree\n  }\n  this.Compiler = tree => {\n    console.debug(\"Compiler Tree:\", tree)\n    return \"\"\n  }\n  return RemarkWordTransformer\n}\n\nconst ProcessStyler = async (\n  range: Word.Range,\n  options: { inlineStyle?: boolean } = {}\n) => {\n  await Word.run(async () => {\n    console.debug(\"Parsing markdown document...\")\n    range.load()\n    await range.context.sync()\n    const remarkText = getCleanText(range.text)\n    const remarkPromise = new Promise((resolve, reject) => {\n      Unified()\n        .use(RemarkParse)\n        .use(RemarkFrontmatter, [\"yaml\", \"toml\"])\n        .use(RemarkWord, { range: range, inlineStyle: options.inlineStyle })\n        .process(remarkText, (error, _) => {\n          if (error) {\n            reject(error)\n          }\n          resolve(\"\")\n        })\n    })\n    await remarkPromise\n    console.info(\"Walking through done.\")\n    await range.context.sync()\n  })\n  console.info(\"Styler process done.\")\n}\nconst ProcessPrettier = async (\n  range: Word.Range,\n  options: { proseWrap?: boolean } = {}\n) => {\n  await Word.run(async () => {\n    console.debug(\"Fetching document content...\")\n    range.load()\n    await range.context.sync()\n    const originalText = getCleanText(range.text)\n    if (originalText == \"\") {\n      console.error(\"No text is selected\")\n      return\n    }\n    console.info(\"Original Text: \", originalText, await hex(originalText))\n\n    console.debug(\"Prettifying markdown document...\")\n    const prettyText: string = Prettier.format(originalText, {\n      parser: \"markdown\",\n      plugins: [PrettierMarkdown, PrettierYaml, PrettierBabylon],\n      proseWrap: options.proseWrap ? \"always\" : \"never\", // [always,never,preserve]\n    })\n    console.info(\"Pretty Text: \", prettyText, await hex(prettyText))\n\n    let fixedText = prettyText\n    if (originalText.startsWith(\"\\n\") && !fixedText.startsWith(\"\\n\")) {\n      fixedText = \"\\n\" + fixedText\n    }\n    if (!originalText.endsWith(\"\\n\") && fixedText.endsWith(\"\\n\")) {\n      fixedText = fixedText.slice(0, -1)\n    }\n    console.debug(\"Fixed Text: \", fixedText)\n\n    console.debug(\"Replacing prettier document...\")\n    range.insertText(getDisplayText(fixedText), Word.InsertLocation.replace)\n    await range.context.sync()\n  })\n  console.info(\"Prettier process done.\")\n}\n\nconst ProcessRange = async (range: Word.Range) => {\n  const settings = await loadSettings()\n  await Word.run(async () => {\n    console.debug(\"Reseting style ...\")\n    range.styleBuiltIn = Word.Style.normal\n    await range.context.sync()\n  })\n  if (settings.enablePrettier) {\n    await ProcessPrettier(range, { proseWrap: settings.proseWrap })\n  }\n  if (settings.enableStyler) {\n    await ProcessStyler(range, { inlineStyle: settings.inlineStyle })\n  }\n  console.info(\"All processes done.\")\n}\n\nexport const ProcessSelection = async () => {\n  try {\n    let remarkRange: Word.Range = undefined\n    await Word.run(async context => {\n      console.debug(\"Getting selection range...\")\n      const inputRange = expandToParagraph(context.document.getSelection())\n      remarkRange = inputRange\n      context.trackedObjects.add(remarkRange)\n      await context.sync()\n    })\n    await ProcessRange(remarkRange)\n  } catch (error) {\n    console.error(error)\n  }\n}\nexport const ProcessDocument = async () => {\n  try {\n    let remarkRange: Word.Range = undefined\n    await Word.run(async context => {\n      console.debug(\"Getting document range...\")\n      const inputRange = context.document.body.getRange()\n      remarkRange = inputRange\n      context.trackedObjects.add(remarkRange)\n      await context.sync()\n    })\n    await ProcessRange(remarkRange)\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default {\n  ProcessSelection: ProcessSelection,\n  ProcessDocument: ProcessDocument,\n}\n","type HexFunction = (str: String) => Promise<Array<number>>\nexport const hex: HexFunction = async str =>\n  str.split(\"\").map(ch => ch.charCodeAt(0))\n\ntype SleepFunction = (ms: number) => Promise<void>\nexport const sleep: SleepFunction = ms => {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n"],"sourceRoot":""}